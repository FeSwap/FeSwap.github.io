(self.webpackChunkfeswap_docs=self.webpackChunkfeswap_docs||[]).push([[7585],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return d},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),p=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},d=function(e){var n=p(e.components);return r.createElement(c.Provider,{value:n},e.children)},l={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,d=i(e,["components","mdxType","originalType","parentName"]),u=p(t),m=a,f=u["".concat(c,".").concat(m)]||u[m]||l[m]||o;return t?r.createElement(f,s(s({ref:n},d),{},{components:t})):r.createElement(f,s({ref:n},d))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,s=new Array(o);s[0]=u;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,s[1]=i;for(var p=2;p<o;p++)s[p]=t[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5050:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return s},contentTitle:function(){return i},metadata:function(){return c},toc:function(){return p},default:function(){return l}});var r=t(2122),a=t(9756),o=(t(7294),t(3905)),s={id:"sponsor",title:"Contract Sponsor",hide_title:!0,sidebar_label:"Sponsor",hide_table_of_contents:!0},i=void 0,c={unversionedId:"Contracts/sponsor",id:"Contracts/sponsor",isDocsHomePage:!1,title:"Contract Sponsor",description:"FeSwap Sponsor",source:"@site/docs/Contracts/Sponor.md",sourceDirName:"Contracts",slug:"/Contracts/sponsor",permalink:"/cn/docs/Contracts/sponsor",editUrl:"https://github.com/feswap/docs/Contracts/Sponor.md",version:"current",frontMatter:{id:"sponsor",title:"Contract Sponsor",hide_title:!0,sidebar_label:"Sponsor",hide_table_of_contents:!0},sidebar:"FeSwapSidebar",previous:{title:"Token Pair NFT",permalink:"/cn/docs/Contracts/nft"},next:{title:"Staking Reward Factory",permalink:"/cn/docs/Contracts/StakingTwinRewardsFactory"}},p=[{value:'<span className="title"> Reward Rate Example: </span>',id:"reward-rate-example",children:[]},{value:'<span className="title"> Sponsor Contract Address </span>',id:"sponsor-contract-address",children:[]},{value:'<span className="title"> Sponsor Contract Code </span>',id:"sponsor-contract-code",children:[]}],d={toc:p};function l(e){var n=e.components,t=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"title"},(0,o.kt)("h1",null," FeSwap Sponsor ")),(0,o.kt)("hr",null),(0,o.kt)("p",null,"FeSwap ",(0,o.kt)("inlineCode",{parentName:"p"},"Sponsor")," contract receives donation from users, and send back FESW tokens accordingly."),(0,o.kt)("p",null,"The initial reward rate is 100,000 FESW/ETH, and the reward rate decreases linearly on the rate of 20 FESW per totally received ETH."),(0,o.kt)("p",null,"The same reward rate applies to all tranactions within the same block, and it is recalculated for each block receiving sponsor. "),(0,o.kt)("p",null,"The total sponsor cap is 1000 ETH, maximum cap is 1001 ETH. Totally 100,000,000 FESW are filled into ",(0,o.kt)("inlineCode",{parentName:"p"},"Sponsor")," contract. If the sponsor cap is reached, all the left FESW will be burned, otherwise left FESW will be claimed back."),(0,o.kt)("p",null,"The total duration receiving sponsor is 30 days, starting from the time specified by the FeSwap ",(0,o.kt)("inlineCode",{parentName:"p"},"Sponsor")," contract while it is deployed.  "),(0,o.kt)("h3",{id:"reward-rate-example"},(0,o.kt)("span",{className:"title"}," Reward Rate Example: ")),(0,o.kt)("p",null,"Assuming 100 ETH already received, the up-to-date reward rate is 100,000 FESW/ETH - 100 * 20 FESW/ETH  = 98,000 FESW/ETH"),(0,o.kt)("h3",{id:"sponsor-contract-address"},(0,o.kt)("span",{className:"title"}," Sponsor Contract Address ")),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"center"},"ETH NetWork"),(0,o.kt)("th",{parentName:"tr",align:"center"},"Sponsor Contract Address"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"ETH Mainnet"),(0,o.kt)("td",{parentName:"tr",align:"center"},"Waiting")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"ETH Testnet Ropsten"),(0,o.kt)("td",{parentName:"tr",align:"center"},(0,o.kt)("a",{parentName:"td",href:"https://ropsten.etherscan.io/address/0xb7196a981de991cdcaee06eb7c39c84b5277d234"},"0xb7196a981de991cdcaee06eb7c39c84b5277d234"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"ETH Testnet Rinkeby"),(0,o.kt)("td",{parentName:"tr",align:"center"},(0,o.kt)("a",{parentName:"td",href:"https://rinkeby.etherscan.io/address/0xb7196a981de991cdcaee06eb7c39c84b5277d234"},"0xb7196a981de991cdcaee06eb7c39c84b5277d234"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"ETH Testnet Goerli"),(0,o.kt)("td",{parentName:"tr",align:"center"},(0,o.kt)("a",{parentName:"td",href:"https://goerli.etherscan.io/address/0xb7196a981de991cdcaee06eb7c39c84b5277d234"},"0xb7196a981de991cdcaee06eb7c39c84b5277d234"))),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"center"},"ETH Testnet Kovan"),(0,o.kt)("td",{parentName:"tr",align:"center"},(0,o.kt)("a",{parentName:"td",href:"https://kovan.etherscan.io/address/0xb7196a981de991cdcaee06eb7c39c84b5277d234"},"0xb7196a981de991cdcaee06eb7c39c84b5277d234"))))),(0,o.kt)("h3",{id:"sponsor-contract-code"},(0,o.kt)("span",{className:"title"}," Sponsor Contract Code ")),(0,o.kt)("p",null,"The open-source FeSwap ",(0,o.kt)("inlineCode",{parentName:"p"},"Sponsor")," contact is stored at ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/FeSwap/Governance/blob/main/contracts/FeswSponsor.sol"},"Github Governance Project")," "),(0,o.kt)("p",null,"Following is the code deployed:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sol",metastring:'title="FeswSponsor.sol"',title:'"FeswSponsor.sol"'},"// SPDX-License-Identifier: GPL-3.0\npragma solidity ^0.7.0;\npragma experimental ABIEncoderV2;\n\nimport \"./interfaces/IERC20.sol\";\nimport \"./utils/SafeMath.sol\";\nimport \"./utils/TransferHelper.sol\";\n\n/**\n * @title FeswSponsor contract\n * @dev To raise sponsor and give away FESW\n */\n\ncontract FeswSponsor { \n\n    using SafeMath for uint256;\n\n    // Public variables\n    // FeSwap sponsor raising target: 1000 ETH\n    uint256 public constant TARGET_RAISING_ETH = 1_000e18;    \n\n    // FeSwap sponsor raising cap: 1001 ETH\n    uint256 public constant CAP_RAISING_ETH = 1_000e18 + 1e18;    \n\n    // Initial FESW giveaway rate per ETH: 100K FESW/ETH\n    uint256 public constant INITIAL_FESW_RATE_PER_ETH = 100_000;    \n\n    // FESW giveaway change rate for total sponsored ETH\n    uint256 public constant FESW_CHANGE_RATE_VERSUS_ETH = 20; \n\n    // FESW sponsor raising duration: 30 days \n    uint256 public constant SPONSOR_DURATION = 30 * 24 * 3600;     \n\n    // contract of Feswap DAO Token\n    address public FeswapToken;     \n\n    // Feswap foundation address\n    address public FeswapFund;     \n\n    // Feswap Burner address\n    address public FeswapBurner;     \n\n    // Total received ETH\n    uint256 public TotalETHReceived;   \n\n    // Current giveaway rate\n    uint256 public CurrentGiveRate;    \n\n    // Sponsor start timestamp\n    uint64 public SponsorStartTime;\n\n    // Last block timestamp\n    uint64 public LastBlockTime;\n\n    // If sponsor raising finalized\n    uint64 public SponsorFinalized;\n\n    // Events for received sponsor\n    event EvtSponsorReceived(address indexed from, address indexed to, uint256 ethValue);\n\n    // Events for finalized sponsor\n    event EvtSponsorFinalized(address indexed to, uint256 ethValue);\n  \n    /**\n     * @dev Initializes the contract with fund and burner address\n     */\n    constructor (address feswapToken, address feswapFund, address feswapBurner, uint256 sponsorStartTime ) \n    {\n        FeswapToken         = feswapToken;\n        FeswapFund          = feswapFund; \n        FeswapBurner        = feswapBurner; \n        SponsorStartTime    = uint64(sponsorStartTime);\n    }\n\n    /**\n     * @dev Receive the sponsorship\n     * @param feswapReceiver The address receiving the giveaway FESW token\n     */\n    function Sponsor(address feswapReceiver) external payable returns (uint256 sponsorAccepted) {\n        require(block.timestamp >= SponsorStartTime, 'FESW: SPONSOR NOT STARTED');\n        require(block.timestamp < (SponsorStartTime + SPONSOR_DURATION), 'FESW: SPONSOR ENDED');\n        require(TotalETHReceived < TARGET_RAISING_ETH, 'FESW: SPONSOR COMPLETED');\n\n        // calculate the giveaway rate\n        uint256 feswGiveRate;\n        if(block.timestamp > LastBlockTime) {\n            feswGiveRate = INITIAL_FESW_RATE_PER_ETH - TotalETHReceived.mul(FESW_CHANGE_RATE_VERSUS_ETH).div(1e18);\n            CurrentGiveRate = feswGiveRate;\n            LastBlockTime = uint64(block.timestamp);\n        } else {\n            feswGiveRate = CurrentGiveRate;\n        }\n\n        // Maximum 1001 ETH accepted, extra ETH will be returned back\n        sponsorAccepted = CAP_RAISING_ETH - TotalETHReceived;\n        if (msg.value < sponsorAccepted){\n            sponsorAccepted = msg.value;          \n        }                                                        \n\n        // Accumulate total ETH sponsored\n        TotalETHReceived += sponsorAccepted;                                                              \n\n        // FESW give away\n        uint256 feswapGiveaway = sponsorAccepted.mul(feswGiveRate);\n        TransferHelper.safeTransfer(FeswapToken, feswapReceiver, feswapGiveaway);\n \n        // return back extra ETH\n        if(msg.value > sponsorAccepted){\n            TransferHelper.safeTransferETH(msg.sender, msg.value - sponsorAccepted);\n        }    \n        \n        emit EvtSponsorReceived(msg.sender, feswapReceiver, sponsorAccepted);\n    }\n\n    /**\n     * @dev Finalize Feswap sponsor raising\n     */\n    function finalizeSponsor() public {\n        require(SponsorFinalized == 0, 'FESW: SPONSOR FINALIZED');\n        require(msg.sender == FeswapFund, 'FESW: NOT ALLOWED');\n        require( (block.timestamp >= (SponsorStartTime + SPONSOR_DURATION)) \n                    || (TotalETHReceived > TARGET_RAISING_ETH), 'FESW: SPONSOR ONGOING');\n\n        // If sponsor raising succeeded, burning left FESW\n        address to = FeswapBurner;\n\n        // If sponsor raising failed \n        if(TotalETHReceived < TARGET_RAISING_ETH) to = FeswapFund;\n\n        // Claim or burn the left FESW\n        uint256 feswLeft = IERC20(FeswapToken).balanceOf(address(this));\n        TransferHelper.safeTransfer(FeswapToken, to, feswLeft);\n\n        // Claim the raised sponsor\n        TransferHelper.safeTransferETH(FeswapFund, address(this).balance );\n        SponsorFinalized = 0xA5;\n\n        emit EvtSponsorFinalized(FeswapFund, TotalETHReceived);\n    }\n}\n")))}l.isMDXComponent=!0}}]);